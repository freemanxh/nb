mkdir -p ./jellyfin/{config,cache,media}
mkdir -p ./jellyfin/media/{movies,tvshows,music}
cd ./jellyfin
---------------------------------------------------------------

networks:
  jellyfin_net: 
    driver: bridge


x-common-config: &common-config
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  environment:
    - TZ=Asia/Shanghai



services:
  # 通常作为入口点，处理 SSL 终止、负载均衡、静态文件等
  jellyfin:
    image: jellyfin/jellyfin:latest
    <<: *common-config
    container_name: jellyfin
      #user: 1000:1000
    environment:
      #- PUID=1000
      #- PGID=1000
      - JELLYFIN_FFMPEG_PATH=/usr/lib/jellyfin-ffmpeg/ffmpeg
      - LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      - GST_VAAPI_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/va/drivers
    volumes:
      - ./config:/config
      - ./cache:/cache
      - /data:/media:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/x86_64-linux-gnu/dri:/usr/lib/x86_64-linux-gnu/dri
    ports:
      - "8096:8096"
      - "8920:8920"
    networks:
      - jellyfin_net
    devices:
      - /dev/dri:/dev/dri






      # 如果需要硬件转码，取消注释下面设备（见第7节）
      #- /dev/dri:/dev/dri         # Intel QSV / AMD
      #- /dev/nvidia0:/dev/nvidia0 # NVIDIA（还需 nvidia-container-toolkit）
      #- /dev/nvidiactl:/dev/nvidiactl
      #- /dev/nvidia-uvm:/dev/nvidia-uvm
---------------------------------------------------------------
===================================================================================================
硬件转码配置（大幅提升性能！）
方案1：Intel Quick Sync（QSV）—— 推荐 NUC/Intel 核显用户
# docker-compose.yml 修改部分
devices:
  - /dev/dri:/dev/dri
environment:
  - JELLYFIN_FFMPEG_PATH=/usr/lib/jellyfin-ffmpeg/ffmpeg

宿主机需安装驱动：
sudo apt install intel-media-va-driver-non-free vainfo
vainfo  # 查看是否支持

无图形服务器
sudo usermod -aG video $USER  # 加入video组
sudo usermod -aG render $USER # 加入render组（部分系统需此步骤）


如果vainfo不能运行
ls -l /dev/dri

# 尝试使用 render node (更常用)
DRM_NODE=/dev/dri/renderD128 vainfo

# 如果上一个失败，尝试使用 card node
DRM_NODE=/dev/dri/card0 vainfo

-----------------------------------------------------






# 方案1：安装虚拟 X Server（推荐）
sudo apt install xvfb  # Ubuntu/Debian
xvfb-run vainfo       # 使用虚拟缓冲运行

# 方案2：强制指定显示变量（仅测试用）
export DISPLAY=:0     # 若本机有图形环境但被忽略
vainfo




方案2：NVIDIA GPU
# docker-compose.yml
runtime: nvidia  # 启用 NVIDIA 运行时
environment:
  - NVIDIA_VISIBLE_DEVICES=all
  - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
宿主机需安装：

    NVIDIA 驱动
    nvidia-container-toolkit
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt update && sudo apt install nvidia-container-toolkit
sudo systemctl restart docker


方案3：AMD GPU（VA-API）
devices:
  - /dev/dri:/dev/dri
宿主机安装驱动 + vainfo


在 Jellyfin 后台启用硬件加速：

    控制台 → 播放 → 转码
    勾选 “启用硬件加速”
    选择：
        Intel → Video Acceleration API (VAAPI)
        NVIDIA → NVIDIA NVENC
        AMD → Video Acceleration API (VAAPI)
    保存 → 重启 Jellyfin



=============================================================

Jellyfin 后台 → 转码信息

    ✅ Intel → Video Acceleration API (VAAPI)、QuickSync
    ✅ NVIDIA → NVIDIA NVENC
    ✅ AMD → Video Acceleration API (VAAPI)

播放时观察 CPU/GPU 使用率（最实用）
# 查看 CPU 使用率
htop

# 查看 GPU 使用率（Intel/AMD）
sudo intel_gpu_top   # Intel
sudo radeontop       # AMD

# NVIDIA
nvidia-smi -l 1      # 每秒刷新
