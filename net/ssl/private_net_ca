PL89velRt@+qBsl$








1、创建目录结构

mkdir -p ~/internal-ca/{certs,crl,newcerts,private}
touch ~/internal-ca/index.txt
echo 1000 > ~/internal-ca/serial
cd ~/internal-ca

2、生成根 CA 私钥（2048 或 4096 位）
openssl genrsa -aes256 -out private/ca.key.pem 4096
chmod 400 private/ca.key.pem
输入新密码

3、生成根 CA 证书（有效期 10 年）
openssl req -x509 -new -key private/ca.key.pem \
    -days 3650 \
    -sha256 \
    -extensions v3_ca \
    -out certs/ca.cert.pem \
    -subj "/C=CN/ST=Beijing/L=Beijing/O=MyCompany/CN=MyCompany Internal Root CA"
    
输入同一密码

openssl req -x509 -new -key private/ca.key.pem \
    -days 3650 \
    -sha256 \
    -extensions v3_ca \
    -out certs/ca.cert.pem \
    -subj "/C=CN/ST=Chengdu/L=Chengdu/O=yematech.com/CN=yematech.com Internal Root CA"
    
    
    
    

4、为服务器生成私钥
openssl genrsa -out private/server.key.pem 2048
chmod 400 private/server.key.pem

5、生成证书签名请求（CSR）
openssl req -new -key private/server.key.pem \
    -out server.csr \
    -subj "/C=CN/ST=Beijing/L=Beijing/O=MyCompany/CN=192.168.0.11" \
    -addext "subjectAltName = IP:192.168.0.11,DNS:myapp.local,DNS:localhost"
    
openssl req -new -key private/server.key.pem \
    -out server.csr \
    -subj "/C=CN/ST=Chengdu/L=Chengdu/O=yematech.com/CN=192.168.0.14" \
    -addext "subjectAltName = IP:192.168.0.14,DNS:yematech.com,DNS:yematech.local,DNS:yematech.test"
    
    
6、用根 CA 签发服务器证书
openssl x509 -req -in server.csr \
    -CA certs/ca.cert.pem \
    -CAkey private/ca.key.pem \
    -CAcreateserial \
    -out certs/server.cert.pem \
    -days 365 \
    -sha256 \
    -extfile <(printf "subjectAltName=IP:192.168.0.11,DNS:myapp.local,DNS:localhost")
    
输入同一密码


 openssl x509 -req -in server.csr \
    -CA certs/ca.cert.pem \
    -CAkey private/ca.key.pem \
    -CAcreateserial \
    -out certs/server.cert.pem \
    -days 365 \
    -sha256 \
    -extfile <(printf "subjectAltName=IP:192.168.0.14,DNS:yematech.com,DNS:yematech.local,DNS:yematech.test")
    
    

7、验证证书内容
openssl x509 -in certs/server.cert.pem -text -noout
检查 X509v3 Subject Alternative Name 是否包含你设置的 IP 和域名。


8、nginx 配置

server {
    listen 443 ssl;
    server_name 192.168.0.11 myapp.local;

    ssl_certificate /path/to/internal-ca/certs/server.cert.pem;
    ssl_certificate_key /path/to/internal-ca/private/server.key.pem;

    # 推荐安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;

    # 可选：启用 OCSP Stapling（内网无 OCSP 服务器，可关闭）
    #ssl_stapling off;
    #ssl_stapling_verify off;

    location / {
        root /var/www/html;
        index index.html;
    }
}

# HTTP 跳转 HTTPS
server {
    listen 80;
    server_name 192.168.0.11 myapp.local;
    return 301 https://$host$request_uri;
}


sudo cp ca.cert.pem /usr/local/share/ca-certificates/mycompany-root-ca.crt
sudo update-ca-certificates

    
    

